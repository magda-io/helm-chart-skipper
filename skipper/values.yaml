# Default values for skipper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/zalando/skipper
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 150m
    memory: 150Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

service:
  # -- default, the service name would be release name + '-' chart name (or chart alias name)
  # this field allow you to override the default service name
  name: ""
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 9090

livenessProbe:
  httpGet:
    path: /__status/live
    port: 9090
readinessProbe: 
  httpGet:
    path: /__status/ready
    port: 9090

# -- skipper config file
# see https://opensource.zalando.com/skipper/tutorials/basics/#yaml-configuration
config:
  address: ":9090"
  access-log: "/dev/stdout"
  application-log: "/dev/stdout"

probeRoutes: |
  // routes used to setup k8s probes
  probe_liveness_up: 
    Method("GET") && Path("/__status/live") -> inlineContent("OK") -> <shunt>;
  probe_liveness_down: 
    Method("GET") && Path("/__status/live") && Shutdown() -> status(503) -> inlineContent("shutdown") -> <shunt>;
  probe_readiness_up: 
    Method("GET") && Path("/__status/ready") -> inlineContent("OK") -> <shunt>;
  probe_readiness_down: 
    Method("GET") && Path("/__status/ready") && Shutdown() -> status(503) -> inlineContent("shutdown") -> <shunt>;

routes: |
  // everything else 404
  defaultRoute: * -> <shunt>;
